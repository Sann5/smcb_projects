#Get Functions
source("./code/profileHMM.R")
#Read in Data
GTP_binding_proteins = parseAlignment("./data/GTP_binding_proteins.txt")
ATPases = parseAlignment("./data/ATPases.txt")
#Get the profile HMMS
profileHMM_GTP = learnHMM(GTP_binding_proteins)
profileHMM_ATPases = learnHMM(ATPases)
?which
profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE)
profileHMM_ATPases$mE
max(profileHMM_ATPases$mE,na.rm=TRUE)
#Highest match emission frequencies
match_frequency_positions_ATPases =
which(profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(match_frequency_positions_ATPases)
barplot(profileHMM_ATPases$mE[,match_frequency_positions_ATPases],
names.arg=rownames(profileHMM_ATPases),
main = paste0("Highest match emission frequency for ATPases at position: ",
match_frequency_positions_ATPases))
#Highest insert emission frequencies
insert_frequency_positions_ATPases =
which(profileHMM_ATPases$iE == max(profileHMM_ATPases$iE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(insert_frequency_positions_ATPases)
barplot(profileHMM_ATPases$mE[,insert_frequency_positions_ATPases],
names.arg=rownames(profileHMM_ATPases),
main = paste0("Highest insert emission frequency for ATPases at position: ",
insert_frequency_positions_ATPases))
which(profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE),
arr.ind = TRUE)
profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE
profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE
profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE)
#Highest match emission frequencies
match_frequency_positions_ATPases =
which(profileHMM_ATPases$mE == max(profileHMM_ATPases$mE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(match_frequency_positions_ATPases)
barplot(profileHMM_ATPases$mE[,match_frequency_positions_ATPases],
names.arg=rownames(profileHMM_ATPases),
main = paste0("Highest match emission frequency for ATPases at position: ",
match_frequency_positions_ATPases))
#Highest insert emission frequencies
insert_frequency_positions_ATPases =
which(profileHMM_ATPases$iE == max(profileHMM_ATPases$iE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(insert_frequency_positions_ATPases)
barplot(profileHMM_ATPases$mE[,insert_frequency_positions_ATPases],
names.arg=rownames(profileHMM_ATPases),
main = paste0("Highest insert emission frequency for ATPases at position: ",
insert_frequency_positions_ATPases))
#Highest match emission frequencies
match_frequency_positions_GTP =
which(profileHMM_GTP$mE == max(profileHMM_GTP$mE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(match_frequency_positions_GTP)
barplot(profileHMM_GTP$mE[,match_frequency_positions_GTP],
names.arg=rownames(profileHMM_GTP),
main = paste0("Highest match emission frequency for GTP at position: ",
match_frequency_positions_GTP))
#Highest insert emission frequencies
insert_frequency_positions_GTP =
which(profileHMM_GTP$iE == max(profileHMM_GTP$iE,na.rm=TRUE),
arr.ind = TRUE)[2]
print(insert_frequency_positions_GTP)
barplot(profileHMM_GTP$mE[,insert_frequency_positions_GTP],
names.arg=rownames(profileHMM_GTP),
main = paste0("Highest insert emission frequency for GTP at position: ",
insert_frequency_positions_GTP))
#Load the protein sequence
unclassifiedProteins <- parseProteins(proteinsFile =
"./data/Unclassified_proteins.txt" )
P_ATPases <- lapply(X = unclassifiedProteins, forward, HMM=profileHMM_ATPases)
P_GTP <- lapply(X = unclassifiedProteins, forward, HMM=profileHMM_GTP)
#Log-Odds Ratio of ATPases Profile HMM wrt GTP Profile HMM
q <- unlist(P_ATPases)-unlist(P_GTP)
plot(q,col=ifelse(q>=0,"red","blue"),
main="Log Odds Ratio of ATPases Profile HMM wrt GTP Profile HMM",
ylab = "Log Odds Ratio", xlab = "Sequence Index")
unclassifiedATPases = as.numeric(which(q >=0,arr.ind = TRUE))
no_unclassifiedATPases = length(unclassifiedATPases)
print(paste0("The number of predicted ATPases is ",no_unclassifiedATPases))
print("The unclassified proteins that are ATPases have indices")
print(unclassifiedATPases)
unclassifiedGTP = as.numeric(which(q < 0,arr.ind = TRUE))
no_unclassifiedGTP = length(unclassifiedGTP)
print(paste0("The number of predicted GTPs is ",no_unclassifiedGTP))
print("The unclassified proteins that are GTPs have indices")
print(unclassifiedGTP)
P_ATPases
unlist(P_ATPases)
unlist(P_ATPases)
P_ATPases <- lapply(X = unclassifiedProteins, forward, HMM=profileHMM_ATPases)
P_GTP <- lapply(X = unclassifiedProteins, forward, HMM=profileHMM_GTP)
#Log-Odds Ratio of ATPases Profile HMM wrt GTP Profile HMM
q <- unlist(P_ATPases)-unlist(P_GTP)
plot(q,col=ifelse(q>=0,"red","blue"),
main="Log Odds Ratio of ATPases Profile HMM wrt GTP Profile HMM",
ylab = "Log Odds Ratio", xlab = "Sequence Index")
