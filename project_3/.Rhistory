trans_mat = matrix(c(0.1, 0.9, 0.4, 0.6), nrow = 2, ncol = 2)
trans_mat
trans_mat = matrix(c(0.1, 0.4, 0.9, 0.6), nrow = 2, ncol = 2)
trans_mat
eigen(t(trans_mat))
eigen(trans_mat)
-0.4061385*(-0.9) + -0.9138115*0.4
eigen_decomp = eigen(t(trans_mat))
eigen_decomp$vectors[1]
eigen_decomp$vectors[,1]
## Get first column (matrix columns contain the eigenvectors) and normalize
eigen_decomp$vectors[,1] \ sum(eigen_decomp$vectors[,1])
## Get first column (matrix columns contain the eigenvectors) and normalize
eigen_decomp$vectors[,1] / sum(eigen_decomp$vectors[,1])
## Get first column (matrix columns contain the eigenvectors) and normalize
stat_dist = eigen_decomp$vectors[,1] / sum(eigen_decomp$vectors[,1])
stat_dist
## Check
t(trans_mat) %*% stat_dist
## Init distribution matrix
dist_mat = matrix(1, nrow = 2, ncol = 2)
7
## Define error
err = 1e-7
dist
dist_mat
sum(dist_mat)
## Init distribution matrix
dist_mat = t(trans_mat)
sum(dist_mat)
## Define error
err = 1e-7
## Init distribution matrix
dist_mat = t(trans_mat)
## Loop while error is larger
while (sum(dist_mat) > err) {
dist_mat = dist_mat %*% t(trans_mat)
}
dist_mat = t(trans_mat)
dist_mat %*% t(trans_mat)
## Init distribution matrix
dist_mat = t(trans_mat)
## Loop while error is larger
while (sum(dist_mat) > err) {
dist_mat = dist_mat %*% t(trans_mat)
sum(dist_mat)
}
## Define error
err = 1e-7
## Init distribution matrix
dist_mat = t(trans_mat)
## Loop while error is larger
while (sum(dist_mat) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(sum(dist_mat))
}
dist_mat %*% t(trans_mat)
t(trans_mat) %*% t(trans_mat)
t(trans_mat) - t(trans_mat)
c(stat_dist, stat_dist)
matrix(stat_dist, stat_dist, 2,2)
matrix(stat_dist, stat_dist, nrow = 2, ncol = 2)
t(stat_dist)
stat_dist
?
matrix
matrix
matrix(stat_dist, stat_dist, nrow = 2, ncol = 2, byrow = TRUE)
matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = TRUE)
matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(sum(dist_mat))
}
## Print distribution
dist_mat
matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
t(trans_mat)
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
}
## Print distribution
dist_mat
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(dist_mat)
}
## Print distribution
dist_mat
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(dist_mat)
}
## Print distribution
dist_mat
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(dist_mat)
}
## Print distribution
dist_mat
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(dist_mat - target) > err) {
dist_mat = dist_mat %*% t(trans_mat)
print(dist_mat)
}
dist_mat - target
sum(dist_mat - target)
target
abs(dist_mat - target)
## Define error
err = 1e-7
## Init distribution matrix and target
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
## Loop while error is larger
while (sum(abs(dist_mat - target)) > err) {
dist_mat = dist_mat %*% t(trans_mat)
}
## Print distribution
dist_mat
## Define error
err = 1e-7
## Init distribution matrix, target counter
dist_mat = t(trans_mat)
target = matrix(c(stat_dist, stat_dist), nrow = 2, ncol = 2, byrow = FALSE)
n = 0
## Loop while error is larger
while (sum(abs(dist_mat - target)) > err) {
dist_mat = dist_mat %*% t(trans_mat)
n = n + 1
}
## Print distribution and power
dist_mat
n
