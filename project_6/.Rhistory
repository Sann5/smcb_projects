knitr::opts_chunk$set(echo = TRUE)
library("coda")
library("ggplot2")
#returns 1 with probability p, and 0 with probability 1-p
rbernoulli=function(p){return(1*runif(1)<p)}
# sample from distribution X given Y above
sample_CgivenR = function(R){
if(R==0){
C = rbernoulli(0.0476) # returns 1 with probability 0.2; otherwise 0
} else {
C = rbernoulli(0.4444)
}
return(C)
}
#' sample from distribution Y given X above
sample_RgivenC = function(C){
if(C==0){
R = rbernoulli(0.2157)
} else {
R = rbernoulli(0.8148)
}
return(R)
}
set.seed(100)
niter = 100
C = rep(0,niter)
R = rep(0,niter)
C[1]=1
R[1]=1 # start from (1,1)
for(i in 2:niter){
C[i] = sample_CgivenR(R[i-1])
R[i] = sample_RgivenC(C[i])
}
res = data.frame(C=C,R=R)
res
#Display a 2-by-2 table for the sampled R and C.
#1=True, 0=False
#Row is Cloudy, Column is Rain
table=table(res))/niter
#Display a 2-by-2 table for the sampled R and C.
#1=True, 0=False
#Row is Cloudy, Column is Rain
table=table(res)/niter
table
#JUNE ADD EQUATION LOL
colSums(table)
niter = 50000
C = rep(0,niter)
R = rep(0,niter)
C[1]=1
R[1]=1 # start from (1,1)
for(i in 2:niter){
C[i] = sample_CgivenR(R[i-1])
R[i] = sample_RgivenC(C[i])
}
res50000run1 = data.frame(C=C,R=R)
head(res50000run1)
#Print the table
table50000run1=table(res50000run1)/niter
table50000run1
colSums(table50000run1)
#First Run of Gibbs sampler
freqC<-c()
freqR<-c()
for(i in 1:niter){
freqC<-append(freqC,sum(res50000run1$C[1:i])/i)
freqR<-append(freqR,sum(res50000run1$R[1:i])/i)
}
#Second Run of Gibbs sampler
niter = 50000
C = rep(0,niter)
R = rep(0,niter)
C[1]=1
R[1]=1 # start from (1,1)
for(i in 2:niter){
C[i] = sample_CgivenR(R[i-1])
R[i] = sample_RgivenC(C[i])
}
res50000run2 = data.frame(C=C,R=R)
freqC2<-c()
freqR2<-c()
for(i in 1:niter){
freqC2<-append(freqC2,sum(res50000run2$C[1:i])/i)
freqR2<-append(freqR2,sum(res50000run2$R[1:i])/i)
}
df <- data.frame((1:niter),freqC,freqR,freqC2,freqR2)
ggplot(df, aes(1:niter)) +
geom_line(aes(y=freqC, colour="C Fequency Run 1")) +
geom_line(aes(y=freqR, colour="R Fequency Run 1")) +
geom_line(aes(y=freqC2, colour="C Fequency Run 2")) +
geom_line(aes(y=freqR2, colour="R Fequency Run 2")) + ylab("Relative Frequencies") + xlab("Iterations")+labs(color = "Legend")
(0.3*0.99)/(0.945*0.6)
